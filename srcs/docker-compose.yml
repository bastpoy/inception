services:
  nginx:
    build: ./requirements/nginx
    env_file: .env
    ports: 
      - "443:80"
      # - "8080:80"
    depends_on:
      - wordpress
      - mariadb
    volumes:
      - ./requirements/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/ssl/certs/:/etc/nginx/certs:ro
      - /etc/ssl/private:/etc/nginx/private:ro
      - wordpress:/var/www/html
      # - db_data:/var/lib/mysql
      # - ./nginx:/etc/nginx/conf.d
      # - ./nginx/certs:/etc/nginx/certs
      # - ./debug.conf:/etc/nginx/nginx.conf
    networks:
      - wp-networks

  wordpress:
    build: ./requirements/wordpress
    env_file: .env
    volumes:
      - wordpress:/var/www/html
    environment:
      WORDPRESS_DB_HOST: mariadb:3306
      WORDPRESS_DB_USER: ${MYSQL_USER}
      WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
      WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
    depends_on:
      - mariadb
    expose:
      - "9000"
    # ports:
    #   - "8000:9000"
    networks:
      - wp-networks

  mariadb:
    build: ./requirements/mariadb
    env_file: .env
    volumes:
      # - db_data:/var/lib/mysql
      - mariadb:/var/lib/mysql
    restart: always
    # command: '--default-authentication-plugin=mysql_native_password'
    expose: 
      - 3306
    # ports:
    #   - "3306:3306"
    environment: # environnement mySQL pour plus de flexibilite avec Wordpress 
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      # MARIADB_ROOT_PASSWORD: example
    networks:
      - wp-networks

volumes:
  mariadb:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/bpoyet/data/mariadb

  wordpress:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/bpoyet/data/wordpress

networks:
  wp-networks:
    driver: bridge